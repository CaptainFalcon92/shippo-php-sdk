<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Shippo\API\Models\Components;


/** Address - Address represents the address as retrieved from the database */
class Address
{
    /**
     * **required for purchase**<br>
     *
     * First and Last Name of the addressee
     *
     * @var ?string $name
     */
    #[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;

    /**
     * Company Name
     *
     * @var ?string $company
     */
    #[\JMS\Serializer\Annotation\SerializedName('company')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $company = null;

    /**
     * **required for purchase**<br>
     *
     * First street line, 35 character limit. Usually street number and street name (except for DHL Germany, see street_no).
     *
     * @var ?string $street1
     */
    #[\JMS\Serializer\Annotation\SerializedName('street1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $street1 = null;

    /**
     * Second street line, 35 character limit.
     *
     * @var ?string $street2
     */
    #[\JMS\Serializer\Annotation\SerializedName('street2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $street2 = null;

    /**
     * Third street line, 35 character limit. 
     *
     * Only accepted for USPS international shipments, UPS domestic and UPS international shipments.
     *
     * @var ?string $street3
     */
    #[\JMS\Serializer\Annotation\SerializedName('street3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $street3 = null;

    /**
     * Street number of the addressed building. 
     *
     * This field can be included in street1 for all carriers except for DHL Germany.
     *
     * @var ?string $streetNo
     */
    #[\JMS\Serializer\Annotation\SerializedName('street_no')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $streetNo = null;

    /**
     * **required for purchase**<br>
     *
     * Name of a city. When creating a Quote Address, sending a city is optional but will yield more accurate Rates. 
     * Please bear in mind that city names may be ambiguous (there are 34 Springfields in the US). Pass in a state 
     * or a ZIP code (see below), if known, it will yield more accurate results.
     *
     * @var ?string $city
     */
    #[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;

    /**
     * **required for purchase for some countries**<br>
     *
     * State/Province values are required for shipments from/to the US, AU, and CA. UPS requires province for some 
     * countries (i.e Ireland). To receive more accurate quotes, passing this field is recommended. Most carriers 
     * only accept two or three character state abbreviations.
     *
     * @var ?string $state
     */
    #[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;

    /**
     * **required for purchase**<br>
     *
     * Postal code of an Address. When creating a Quote Addresses, sending a ZIP is optional but will yield more 
     * accurate Rates.
     *
     * @var ?string $zip
     */
    #[\JMS\Serializer\Annotation\SerializedName('zip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $zip = null;

    /**
     * Example: `US` or `DE`. All accepted values can be found on the 
     *
     * <a href="http://www.iso.org/" target="blank">Official ISO Website</a>.
     * Sending a country is always required.
     *
     * @var string $country
     */
    #[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $country;

    /**
     * Addresses containing a phone number allow carriers to call the recipient when delivering the Parcel. This 
     *
     * increases the probability of delivery and helps to avoid accessorial charges after a Parcel has been shipped.    
     *
     * @var ?string $phone
     */
    #[\JMS\Serializer\Annotation\SerializedName('phone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phone = null;

    /**
     * E-mail address of the contact person, RFC3696/5321-compliant.
     *
     * @var ?string $email
     */
    #[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;

    #[\JMS\Serializer\Annotation\SerializedName('is_residential')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isResidential = null;

    /**
     * A string of up to 100 characters that can be filled with any additional information you want 
     *
     * to attach to the object.
     *
     * @var ?string $metadata
     */
    #[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $metadata = null;

    /**
     * Complete addresses contain all required values.<br><br>Incomplete addresses have failed one or multiple 
     *
     * validations.<br>Incomplete Addresses are eligible for requesting rates but lack at least one required 
     * value for purchasing labels.
     *
     * @var ?bool $isComplete
     */
    #[\JMS\Serializer\Annotation\SerializedName('is_complete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isComplete = null;

    /**
     * Latitude of address
     *
     * @var mixed $latitude
     */
    #[\JMS\Serializer\Annotation\SerializedName('latitude')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $latitude = null;

    /**
     * Longitude of address
     *
     * @var mixed $longitude
     */
    #[\JMS\Serializer\Annotation\SerializedName('longitude')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $longitude = null;

    /**
     * Date and time of Address creation.
     *
     * @var ?\DateTime $objectCreated
     */
    #[\JMS\Serializer\Annotation\SerializedName('object_created')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $objectCreated = null;

    /**
     * Unique identifier of the given Address object. 
     *
     * This ID is required to create a Shipment object.
     *
     * @var ?string $objectId
     */
    #[\JMS\Serializer\Annotation\SerializedName('object_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectId = null;

    /**
     * Username of the user who created the Address object.
     *
     * @var ?string $objectOwner
     */
    #[\JMS\Serializer\Annotation\SerializedName('object_owner')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectOwner = null;

    /**
     * Date and time of last Address update. Since you cannot update Addresses after they were created, this time 
     *
     * stamp reflects the time when the Address was changed by Shippo's systems for the last time, e.g., during the 
     * approximation of one or more values.
     *
     * @var ?\DateTime $objectUpdated
     */
    #[\JMS\Serializer\Annotation\SerializedName('object_updated')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $objectUpdated = null;

    /**
     * Object that contains information regarding if an address had been validated or not. Also contains any messages 
     *
     * generated during validation. Children keys are <code>is_valid</code>(boolean) and <code>messages</code>(array).
     *
     * @var ?\Shippo\API\Models\Components\AddressValidationResults $validationResults
     */
    #[\JMS\Serializer\Annotation\SerializedName('validation_results')]
    #[\JMS\Serializer\Annotation\Type('Shippo\API\Models\Components\AddressValidationResults')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AddressValidationResults $validationResults = null;

    /**
     * Indicates whether the object has been created in test mode.
     *
     * @var ?bool $test
     */
    #[\JMS\Serializer\Annotation\SerializedName('test')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $test = null;

    public function __construct()
    {
        $this->name = null;
        $this->company = null;
        $this->street1 = null;
        $this->street2 = null;
        $this->street3 = null;
        $this->streetNo = null;
        $this->city = null;
        $this->state = null;
        $this->zip = null;
        $this->country = '';
        $this->phone = null;
        $this->email = null;
        $this->isResidential = null;
        $this->metadata = null;
        $this->isComplete = null;
        $this->latitude = null;
        $this->longitude = null;
        $this->objectCreated = null;
        $this->objectId = null;
        $this->objectOwner = null;
        $this->objectUpdated = null;
        $this->validationResults = null;
        $this->test = null;
    }
}