<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Shippo\API\Models\Components;


class CustomsDeclaration
{
    /**
     * **required if eel_pfc is `AES_ITN`**<br>
     *
     * AES / ITN reference of the shipment.
     *
     * @var ?string $aesItn
     */
    #[\JMS\Serializer\Annotation\SerializedName('aes_itn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $aesItn = null;

    /**
     * B13A Option details are obtained by filing a B13A Canada Export Declaration via the Canadian Export Reporting System (CERS). 
     *
     * <a href="https://www.cbsa-asfc.gc.ca/services/export/guide-eng.html" target="_blank" rel="noopener noreferrer"> More information on reporting commercial exports from Canada. </a>
     * Allowed values available <a href="#tag/Customs-Declaration-B13A-Filing-Option">here</a>
     *
     * @var ?string $b13aFilingOption
     */
    #[\JMS\Serializer\Annotation\SerializedName('b13a_filing_option')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $b13aFilingOption = null;

    /**
     * **must be provided if and only if b13a_filing_option is provided**<br>
     *
     * Represents:<br> the Proof of Report (POR) Number when b13a_filing_option is `FILED_ELECTRONICALLY`;<br> 
     * the Summary ID Number when b13a_filing_option is `SUMMARY_REPORTING`;<br> 
     * or the Exemption Number when b13a_filing_option is `NOT_REQUIRED`.
     *
     * @var ?string $b13aNumber
     */
    #[\JMS\Serializer\Annotation\SerializedName('b13a_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $b13aNumber = null;

    /**
     * Certificate reference of the shipment.
     *
     * @var ?string $certificate
     */
    #[\JMS\Serializer\Annotation\SerializedName('certificate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $certificate = null;

    /**
     * Expresses that the certify_signer has provided all information of this customs declaration truthfully.
     *
     * @var bool $certify
     */
    #[\JMS\Serializer\Annotation\SerializedName('certify')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $certify;

    /**
     * Name of the person who created the customs declaration and is responsible for the validity of all 
     *
     * information provided.
     *
     * @var string $certifySigner
     */
    #[\JMS\Serializer\Annotation\SerializedName('certify_signer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $certifySigner;

    #[\JMS\Serializer\Annotation\SerializedName('commercial_invoice')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $commercialInvoice = null;

    /**
     * **required if contents_type is `OTHER`**<br>
     *
     * Explanation of the type of goods of the shipment.
     *
     * @var ?string $contentsExplanation
     */
    #[\JMS\Serializer\Annotation\SerializedName('contents_explanation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $contentsExplanation = null;

    /**
     * Disclaimer for the shipment and customs information that have been provided.
     *
     * @var ?string $disclaimer
     */
    #[\JMS\Serializer\Annotation\SerializedName('disclaimer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $disclaimer = null;

    /**
     * Additional exporter identification that may be required to ship in certain countries
     *
     * @var ?\Shippo\API\Models\Components\CustomsExporterIdentification $exporterIdentification
     */
    #[\JMS\Serializer\Annotation\SerializedName('exporter_identification')]
    #[\JMS\Serializer\Annotation\Type('Shippo\API\Models\Components\CustomsExporterIdentification')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomsExporterIdentification $exporterIdentification = null;

    /**
     * Exporter reference of an export shipment.
     *
     * @var ?string $exporterReference
     */
    #[\JMS\Serializer\Annotation\SerializedName('exporter_reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $exporterReference = null;

    /**
     * Importer reference of an import shipment.
     *
     * @var ?string $importerReference
     */
    #[\JMS\Serializer\Annotation\SerializedName('importer_reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $importerReference = null;

    /**
     * Indicates whether the shipment's destination VAT has been collected. May be required for some destinations.
     *
     * @var ?bool $isVatCollected
     */
    #[\JMS\Serializer\Annotation\SerializedName('is_vat_collected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isVatCollected = null;

    /**
     * Invoice reference of the shipment.
     *
     * @var ?string $invoice
     */
    #[\JMS\Serializer\Annotation\SerializedName('invoice')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $invoice = null;

    /**
     * License reference of the shipment.
     *
     * @var ?string $license
     */
    #[\JMS\Serializer\Annotation\SerializedName('license')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $license = null;

    /**
     * A string of up to 100 characters that can be filled with any additional information you 
     *
     * want to attach to the object.
     *
     * @var ?string $metadata
     */
    #[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $metadata = null;

    /**
     * Additional notes to be included in the customs declaration.
     *
     * @var ?string $notes
     */
    #[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;

    /**
     * Object ID of the Importer address.
     *
     * @var ?string $addressImporter
     */
    #[\JMS\Serializer\Annotation\SerializedName('address_importer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressImporter = null;

    /**
     * Type of goods of the shipment.  
     *
     * Allowed values available <a href="#tag/Customs-Declaration-Contents-Type">here</a>
     *
     * @var string $contentsType
     */
    #[\JMS\Serializer\Annotation\SerializedName('contents_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $contentsType;

    /**
     * EEL / PFC type of the shipment. For most shipments from the US to CA, `NOEEI_30_36` is applicable; for most 
     *
     * other shipments from the US, `NOEEI_30_37_a` is applicable.
     * Allowed values available <a href="#tag/Customs-Declaration-EELPFC">here</a>
     *
     * @var ?string $eelPfc
     */
    #[\JMS\Serializer\Annotation\SerializedName('eel_pfc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eelPfc = null;

    /**
     * The incoterm reference of the shipment. FCA is available for DHL Express and FedEx only. 
     *
     * eDAP is available for DPD UK only. DAP is available for DHL Express and DPD UK.
     * If expecting DAP for other carriers, please use DDU.
     * Allowed values available <a href="#tag/Customs-Declaration-Incoterm">here</a>
     *
     * @var ?string $incoterm
     */
    #[\JMS\Serializer\Annotation\SerializedName('incoterm')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $incoterm = null;

    /**
     * Additional invoiced charges to be shown on the Customs Declaration Commercial Invoice.
     *
     * @var ?\Shippo\API\Models\Components\CustomsInvoicedCharges $invoicedCharges
     */
    #[\JMS\Serializer\Annotation\SerializedName('invoiced_charges')]
    #[\JMS\Serializer\Annotation\Type('Shippo\API\Models\Components\CustomsInvoicedCharges')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomsInvoicedCharges $invoicedCharges = null;

    /**
     * Distinct Parcel content items as Customs Items object_ids.
     *
     * @var array<string> $items
     */
    #[\JMS\Serializer\Annotation\SerializedName('items')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $items;

    /**
     * Indicates how the carrier should proceed in case the shipment can't be delivered.
     *
     * Allowed values available <a href="#tag/Customs-Declaration-Non-Delivery-Option">here</a>
     *
     * @var string $nonDeliveryOption
     */
    #[\JMS\Serializer\Annotation\SerializedName('non_delivery_option')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nonDeliveryOption;

    /**
     * Date and time of object creation.
     *
     * @var ?\DateTime $objectCreated
     */
    #[\JMS\Serializer\Annotation\SerializedName('object_created')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $objectCreated = null;

    /**
     * Unique identifier of the given object.
     *
     * @var ?string $objectId
     */
    #[\JMS\Serializer\Annotation\SerializedName('object_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectId = null;

    /**
     * Username of the user who created the object.
     *
     * @var ?string $objectOwner
     */
    #[\JMS\Serializer\Annotation\SerializedName('object_owner')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectOwner = null;

    /**
     * Indicates the validity of the enclosing object
     *
     * @var ?\Shippo\API\Models\Components\ObjectStateEnum $objectState
     */
    #[\JMS\Serializer\Annotation\SerializedName('object_state')]
    #[\JMS\Serializer\Annotation\Type('enum<Shippo\API\Models\Components\ObjectStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ObjectStateEnum $objectState = null;

    /**
     * Date and time of last object update.
     *
     * @var ?\DateTime $objectUpdated
     */
    #[\JMS\Serializer\Annotation\SerializedName('object_updated')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $objectUpdated = null;

    /**
     * Indicates whether the object has been created in test mode.
     *
     * @var ?bool $test
     */
    #[\JMS\Serializer\Annotation\SerializedName('test')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $test = null;

    public function __construct()
    {
        $this->aesItn = null;
        $this->b13aFilingOption = null;
        $this->b13aNumber = null;
        $this->certificate = null;
        $this->certify = false;
        $this->certifySigner = '';
        $this->commercialInvoice = null;
        $this->contentsExplanation = null;
        $this->disclaimer = null;
        $this->exporterIdentification = null;
        $this->exporterReference = null;
        $this->importerReference = null;
        $this->isVatCollected = null;
        $this->invoice = null;
        $this->license = null;
        $this->metadata = null;
        $this->notes = null;
        $this->addressImporter = null;
        $this->contentsType = '';
        $this->eelPfc = null;
        $this->incoterm = null;
        $this->invoicedCharges = null;
        $this->items = [];
        $this->nonDeliveryOption = '';
        $this->objectCreated = null;
        $this->objectId = null;
        $this->objectOwner = null;
        $this->objectState = null;
        $this->objectUpdated = null;
        $this->test = null;
    }
}