<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Shippo\API\Models\Components;


class LiveRate
{
    /**
     * Final Rate price, expressed in the currency used in the sender's country.
     *
     * @var ?string $amount
     */
    #[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $amount = null;

    /**
     * Final Rate price, expressed in the currency used in the recipient's country.
     *
     * @var ?string $amountLocal
     */
    #[\JMS\Serializer\Annotation\SerializedName('amount_local')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $amountLocal = null;

    /**
     * Currency used in the sender's country, refers to `amount`. 
     *
     * The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a> currency codes are used, e.g. `USD` or `EUR`.
     *
     * @var ?string $currency
     */
    #[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;

    /**
     * Currency used in the recipient's country, refers to `amount_local`. 
     *
     * The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a> currency codes are used, e.g. `USD` or "EUR".
     *
     * @var ?string $currencyLocal
     */
    #[\JMS\Serializer\Annotation\SerializedName('currency_local')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currencyLocal = null;

    /**
     * The estimated days in transit of the rate that powers the shipping option, if available.
     *
     * @var ?int $estimatedDays
     */
    #[\JMS\Serializer\Annotation\SerializedName('estimated_days')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $estimatedDays = null;

    /**
     * The name of the service group being returned
     *
     * @var ?string $title
     */
    #[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;

    public function __construct()
    {
        $this->amount = null;
        $this->amountLocal = null;
        $this->currency = null;
        $this->currencyLocal = null;
        $this->estimatedDays = null;
        $this->title = null;
    }
}